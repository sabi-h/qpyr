import pytest

from qpyr._lib.encode import get_best_mode, add_padding, get_best_version


@pytest.mark.parametrize(
    "data,expected_mode", [("1234567890", "numeric"), ("OMEGA", "alphanumeric"), ("help@omegaseed.co.uk", "byte")]
)
def test_get_best_mode(data, expected_mode):
    assert get_best_mode(data) == expected_mode


def test_add_padding():
    data = "0100001000010110111101101101011001010110011101100001011100110110010101100101011001000010110101101101011110010110000101110111011001010111001101101111011011010110010101100110011011110110111101100100011010010110010001100101011000010111001100101101011101110110010101100101011001010000"
    version = 4
    ecl = "H"
    assert (
        add_padding(data, version, ecl)
        == "010000100001011011110110110101100101011001110110000101110011011001010110010101100100001011010110110101111001011000010111011101100101011100110110111101101101011001010110011001101111011011110110010001101001011001000110010101100001011100110010110101110111011001010110010101100101000011101100"
    )


def test_get_best_version():
    data_segment
    assert get_best_version(data_segment, mode="byte", ecl="H") == 16
